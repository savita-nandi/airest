
#24Oct25 ConnString with Payment method: String CONN_URL= jdbc:postgresql://mg7gnq6sap.e491z0j1i7.tsdb.cloud.timescale.com:39913/tsdb?sslmode=require&user=tsdbadmin&password=hglsb7hdiyh1tumj"
## Credentials are stored in credentials.properties

#spring.config.import=classpath:config.properties
spring.config.import=file:./credentials.properties

spring.datasource.url=jdbc:postgresql://mg7gnq6sap.e491z0j1i7.tsdb.cloud.timescale.com:39913/tsdb?sslmode=require
spring.datasource.username=tsdbadmin
#spring.datasource.password=specified in credentials.properties

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show-sql=false 
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.ddl-auto=update
spring.ai.vectorstore.pgvector.initialize-schema=true

# API key needed,ie OpenAI to perform Similarity,Fulltext,RAG search
#spring.ai.openai.api-key=specified in credentials.properties

# Tavily API key used to perform Web search, the augmented results of which are then sent to LLM
#spring.ai.tavily.api-key=specified in credentials.properties
spring.ai.tavily.url=https://api.tavily.com/search

## Observability Configs.
##Prometheus,Grafana and Jaeger need to be setup in Docker container
management.endpoints.web.exposure.include=health,metrics,prometheus
opentelemetry.exporter.otlp.endpoint=http://localhost:4317
##By default sampling probability is 0.1=10%
management.tracing.sampling.probability=1.0

##Actuator URL:http://localhost:8080/actuator
##Prometheus URL: http://localhost:8080/actuator/prometheus
##Metrics URL for specific Metric: http://localhost:8080/actuator/metrics/db.vector.client.operation
##Metrics URL for specific Metric property: http://localhost:8080/actuator/metrics/db.vector.client.operation?tag=db.operation.name:query
##Metrics URL for specific Metric:http://localhost:8080/actuator/metrics/gen_ai.client.token.usage
