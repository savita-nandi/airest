<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version> <!--3.4.9-->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.tigerdatademo</groupId>
	<artifactId>tigerdatatest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>tigerdata</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	
	<properties>
		<java.version>21</java.version>
		<spring-ai.version>1.0.0</spring-ai.version><!--1.0.1, 1.0.0-->
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>                      
        </dependency>		
		
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <artifactId>spring-ai-openai-spring-boot-starter</artifactId>		   
		    <version>1.0.0-M6</version>
		</dependency>	
		
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-chat-memory-repository-jdbc</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>		   
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>	
		
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <artifactId>spring-ai-openai</artifactId>		   
		</dependency>
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <artifactId>spring-ai-model</artifactId>
		    <exclusions>
				<exclusion>
					 <groupId>io.micrometer</groupId>
      				 <artifactId>micrometer-observation</artifactId>
				</exclusion>
            </exclusions>  		   
		</dependency>		
		<!--<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-model-openai</artifactId>
			<exclusions>
				<exclusion>
					 <groupId>org.springframework.ai</groupId>
  					 <artifactId>spring-ai-autoconfigure-model-openai</artifactId>
				</exclusion>
				<exclusion>
					 <groupId>org.springframework.ai</groupId>
  					 <artifactId>spring-ai-autoconfigure-model-chat-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>-->
		
		
		
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-rag</artifactId>			
		</dependency>
		<!--<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-advisors-vector-store</artifactId>
			<exclusions>
				<exclusion>
					 <groupId>org.springframework.ai</groupId>
  					 <artifactId>spring-ai-client-chat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>-->
		
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <!--<artifactId>spring-ai-client-chat</artifactId>
		    <version>1.1.0-M3</version>-->
		    <artifactId>spring-ai-core</artifactId>
		    <version>1.0.0-M6</version> 	   
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
  			<artifactId>spring-context</artifactId>
  			<exclusions>
				<exclusion>
					 <groupId>io.micrometer</groupId>
      				 <artifactId>micrometer-observation</artifactId>
				</exclusion>
            </exclusions>  
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
  			<artifactId>micrometer-core</artifactId>
  			<exclusions>
				<exclusion>
					 <groupId>io.micrometer</groupId>
      				 <artifactId>micrometer-observation</artifactId>
				</exclusion>
            </exclusions>  
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <artifactId>spring-ai-pgvector-store</artifactId>		    
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.ai</groupId>
		    <artifactId>spring-ai-tika-document-reader</artifactId>		    
		</dependency>		
		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		    <version>42.7.7</version>
		    <!--42.7.3-->
		</dependency>
		
		
		<!--Use Lomboks AnnotationProcessor during compilation phase to generate boilerplate code-->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.42</version>
		    <scope>provided</scope>	   
		</dependency>	
		
		<!-- Observability Libs: START-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>			
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		
		<!--Otel: Open Telemetry: opentelemetry.io-->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId>
		</dependency>
		<!--Otlp:Opentelemetry Protocol: Export Tracing info to a collector component=Jaeger/Zipkin--> 
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>
		<!-- Observability Libs: END-->
		
		
	</dependencies>	
	
	

	
	<build>
		 <finalName>tigerdatatest</finalName>
		    <plugins>
		     <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
	                <annotationProcessorPaths>
	                    <path>
	                        <groupId>org.projectlombok</groupId>
	                        <artifactId>lombok</artifactId>
	                        <version>1.18.42</version>
	                    </path>
	                </annotationProcessorPaths>
	                <!-- This ensures annotation processing for both main and test sources -->
	                <compilerArgs>
	                    <arg>-parameters</arg>
	                </compilerArgs>
                </configuration>
			</plugin>
			  <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
		        <version>3.4.0</version>	        
			  </plugin>
			  <!--<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
		        <version>3.4.0</version>
		        <configuration>
	                <failOnMissingWebXml>false</failOnMissingWebXml>
	            </configuration>	        
			  </plugin>-->
		</plugins>
	</build>

</project>
